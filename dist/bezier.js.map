{"version":3,"sources":["bezier.js"],"names":["Bezier","startPoint","control1","control2","endPoint","prototype","length","getCurveLength","steps","px","py","i","t","cx","point","x","cy","y","xdiff","ydiff","Math","sqrt","calculatePoint","start","c1","c2","end"],"mappings":";;;;;AAAA,SAASA,MAAT,CAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,QAAhD,EAA0D;AACxD,OAAKH,UAAL,GAAkBA,UAAlB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAED;AACAJ,OAAOK,SAAP,CAAiBC,MAAjB,GAA0B,SAASC,cAAT,GAA0B;AAClD,MAAMC,QAAQ,EAAd;AACA,MAAIF,SAAS,CAAb;AACA,MAAIG,WAAJ;AACA,MAAIC,WAAJ;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKH,KAArB,EAA4BG,KAAK,CAAjC,EAAoC;AAClC,QAAMC,IAAID,IAAIH,KAAd;AACA,QAAMK,KAAK,KAAKC,KAAL,CACTF,CADS,EAET,KAAKX,UAAL,CAAgBc,CAFP,EAGT,KAAKb,QAAL,CAAca,CAHL,EAIT,KAAKZ,QAAL,CAAcY,CAJL,EAKT,KAAKX,QAAL,CAAcW,CALL,CAAX;AAOA,QAAMC,KAAK,KAAKF,KAAL,CACTF,CADS,EAET,KAAKX,UAAL,CAAgBgB,CAFP,EAGT,KAAKf,QAAL,CAAce,CAHL,EAIT,KAAKd,QAAL,CAAcc,CAJL,EAKT,KAAKb,QAAL,CAAca,CALL,CAAX;AAOA,QAAIN,IAAI,CAAR,EAAW;AACT,UAAMO,QAAQL,KAAKJ,EAAnB;AACA,UAAMU,QAAQH,KAAKN,EAAnB;AACAJ,gBAAUc,KAAKC,IAAL,CAAWH,QAAQA,KAAT,GAAmBC,QAAQA,KAArC,CAAV;AACD;AACDV,SAAKI,EAAL;AACAH,SAAKM,EAAL;AACD;;AAED,SAAOV,MAAP;AACD,CAhCD;;AAkCAN,OAAOK,SAAP,CAAiBS,KAAjB,GAAyB,SAASQ,cAAT,CAAwBV,CAAxB,EAA2BW,KAA3B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,GAA1C,EAA+C;AACtE,SAAQH,SAAS,MAAMX,CAAf,KAAqB,MAAMA,CAA3B,KAAiC,MAAMA,CAAvC,CAAD,GACF,MAAMY,EAAN,IAAY,MAAMZ,CAAlB,KAAwB,MAAMA,CAA9B,IAAmCA,CADjC,GAEF,MAAMa,EAAN,IAAY,MAAMb,CAAlB,IAAuBA,CAAvB,GAA2BA,CAFzB,GAGFc,MAAMd,CAAN,GAAUA,CAAV,GAAcA,CAHnB;AAID,CALD;;kBAOeZ,M","file":"bezier.js","sourcesContent":["function Bezier(startPoint, control1, control2, endPoint) {\r\n  this.startPoint = startPoint;\r\n  this.control1 = control1;\r\n  this.control2 = control2;\r\n  this.endPoint = endPoint;\r\n}\r\n\r\n// Returns approximated length.\r\nBezier.prototype.length = function getCurveLength() {\r\n  const steps = 10;\r\n  let length = 0;\r\n  let px;\r\n  let py;\r\n\r\n  for (let i = 0; i <= steps; i += 1) {\r\n    const t = i / steps;\r\n    const cx = this.point(\r\n      t,\r\n      this.startPoint.x,\r\n      this.control1.x,\r\n      this.control2.x,\r\n      this.endPoint.x\r\n    );\r\n    const cy = this.point(\r\n      t,\r\n      this.startPoint.y,\r\n      this.control1.y,\r\n      this.control2.y,\r\n      this.endPoint.y\r\n    );\r\n    if (i > 0) {\r\n      const xdiff = cx - px;\r\n      const ydiff = cy - py;\r\n      length += Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\r\n    }\r\n    px = cx;\r\n    py = cy;\r\n  }\r\n\r\n  return length;\r\n};\r\n\r\nBezier.prototype.point = function calculatePoint(t, start, c1, c2, end) {\r\n  return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\r\n    + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\r\n    + (3.0 * c2 * (1.0 - t) * t * t)\r\n    + (end * t * t * t);\r\n};\r\n\r\nexport default Bezier;\r\n"]}